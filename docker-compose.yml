name: TDengine_dev

services:
  # Docker Compose service for building TDengine in a containerized environment.
  # Uses Ubuntu 22.04 base image for development builds with sanitizers enabled.
  # Run with: docker compose -f .vscode/docker-compose.yml run --rm TDengine-build
  TDengine-build:
    image: hzcheng/ubuntu:22.04.x86_64
    volumes:
      - /mnt/workspace/TDinternal:/root/TDinternal
    working_dir: /root/TDinternal
    stdin_open: true
    tty: true
    profiles: ["build"]
    command: |
      /bin/bash -c "
      set -e
      echo 'Starting TDengine build container...'
      rm -rf .externals build
      mkdir build && cd build
      cmake .. \\
        -DBUILD_SANITIZER=ON \\
        -DBUILD_WITH_UDF=OFF \\
        -DBUILD_S3=false \\
        -DBUILD_TOOLS=false
      make -j\$(nproc)
      echo 'Build completed successfully!'
      "

  # Docker Compose service for TDengine release builds.
  # Uses CentOS 7 base image for compatibility, optimized for release.
  # Run with: docker compose -f .vscode/docker-compose.yml run --rm TDengine-release
  TDengine-release:
    image: hzcheng/centos:7.x86_64
    volumes:
      - /mnt/workspace/TDinternal:/root/TDinternal
    working_dir: /root/TDinternal
    stdin_open: true
    tty: true
    profiles: ["release"]
    command: |
      /bin/bash -c "
      set -e
      echo 'Starting TDengine release build container...'
      rm -rf .externals build
      mkdir build && cd build
      cmake .. \\
        -DCMAKE_BUILD_TYPE=Release \\
        -DBUILD_SANITIZER=OFF \\
        -DBUILD_WITH_UDF=OFF \\
        -DBUILD_S3=false \\
        -DBUILD_TOOLS=false
      make -j\$(nproc)
      echo 'Release build completed successfully!'
      "
